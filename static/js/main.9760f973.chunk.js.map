{"version":3,"sources":["Component/Post.js","axios.js","Container/Posts.js","Component/NewPost.js","Component/FullPost.js","Container/Blog.js","App.js","serviceWorker.js","index.js"],"names":["Post","props","className","onClick","clicked","src","imgPath","alt","imgAlt","title","author","instance","axios","create","baseURL","Posts","state","posts","selectedPostId","error","get","then","response","updatedPosts","data","slice","map","post","setState","catch","id","this","console","log","process","key","postSelectedHandler","Container","Component","NewPost","content","postDataHandler","type","placeholder","value","onChange","event","target","Blog","style","backgroundColor","Navbar","width","overflowX","fixed","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","pathname","path","exact","component","App","Boolean","window","location","hostname","match","Axios","defaults","interceptors","request","use","Promise","reject","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9760f973.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Post = (props) => {\r\n   return (\r\n\r\n      <div className=\"card text-center border-0\" onClick={props.clicked}>\r\n\r\n         <img className=\"card-img-top\"\r\n            src={props.imgPath}\r\n            alt={props.imgAlt} />\r\n\r\n         <div className=\"card-body p-0\">\r\n            <h5 className=\"card-title border-bottom p-3 \">{props.title}</h5>\r\n            <p className=\"card-text bg-secondary mt-1 text-white rounded d-inline-flex px-2 mb-3\">{props.author}</p>\r\n         </div>\r\n      </div>\r\n      \r\n   )\r\n}\r\n\r\nexport default Post\r\n","import  axios  from 'axios';\r\n\r\nconst instance = axios.create( {\r\n   baseURL: \"https://jsonplaceholder.typicode.com\"\r\n});\r\n\r\n// instance.defaults.headers.common[\"Authorization\"] = \"AUTH TOKEN FROM INSTANCE\";\r\n\r\nexport default instance","import Post from '../Component/Post';\r\nimport React, { Component } from 'react'\r\nimport axios from '../axios'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\n\r\nclass Posts extends Component {\r\n\r\n   state = {\r\n      posts: [],\r\n      selectedPostId: null,\r\n      error: false\r\n   };\r\n\r\n   componentDidMount() {\r\n      axios\r\n         .get(\"/posts\")\r\n         .then((response) => {\r\n\r\n            const updatedPosts = response.data.slice(0, 10).map(post => {\r\n               return {\r\n                  ...post, author: 'Max'\r\n               }\r\n            })\r\n\r\n            this.setState({\r\n               posts: updatedPosts,\r\n            });\r\n\r\n         })\r\n         .catch((error) => {\r\n            this.setState({ error: true })\r\n         })\r\n   }\r\n\r\n   postSelectedHandler(id) {\r\n      this.setState({\r\n         selectedPostId: id\r\n      })\r\n   }\r\n\r\n\r\n   render() {\r\n\r\n      console.log('Blog render')\r\n      let posts = <p>something went wrong</p>\r\n\r\n      if (!this.state.error) {\r\n         posts = this.state.posts.map(post =>\r\n            <Post\r\n               imgPath={process.env.PUBLIC_URL + '/photos/unsplash-' + post.id + '.jpg'}\r\n               imgAlt={'photo_' + post.id}\r\n               key={post.id}\r\n               title={post.title}\r\n               author={post.author}\r\n               clicked={() => this.postSelectedHandler(post.id)}\r\n            />\r\n         )\r\n      }\r\n\r\n      return (\r\n         <Container className=\"p-3 mt-5 card-columns\">\r\n            {posts}\r\n         </Container>\r\n      )\r\n   }\r\n\r\n}\r\n\r\nexport default Posts","import React, { Component } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\n\r\nexport default class NewPost extends Component {\r\n   state = {\r\n      title: '',\r\n      author: 'Max',\r\n      content: ''\r\n   }\r\n\r\n\r\n   postDataHandler = () => {\r\n\r\n      // const data = {\r\n      //    title: this.state.title,\r\n      //    author: this.state.author,\r\n      //    content: this.state.content,\r\n      // }\r\n      // Axios.post(\"/posts\", data)\r\n      // .then(response => {\r\n      //     console.log(response)\r\n      // })\r\n      console.log('added new post')\r\n\r\n   }\r\n\r\n   render() {\r\n      console.log('newpost render')\r\n      return (\r\n         <Container className=\"p-3 mt-5\">\r\n            <div className=\"card p-4 \">\r\n               <div className=\"card-body\">\r\n                  <h3 className=\"text-center\">New Post</h3>\r\n                  <hr />\r\n\r\n                  <div className=\"row\">\r\n\r\n                     <div className=\"col-md-6\">\r\n                        <div className=\"form-group\">\r\n                           <input type=\"text\" className=\"form-control\" placeholder=\"Title\" value={this.state.title} onChange={(event) => this.setState({ title: event.target.value })} />\r\n                        </div>\r\n                     </div>\r\n\r\n                     <div className=\"col-md-6\">\r\n                        <div className=\"form-group\">\r\n\r\n                           <select value={this.state.author} className=\"form-control\" id=\"gender\" onChange={(event) => this.setState({ author: event.target.value })}>\r\n                              <option value=\"Max\">Max</option>\r\n                              <option value=\"Anna\">Anna</option>\r\n                           </select>\r\n                        </div>\r\n                     </div>\r\n\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n\r\n                     <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                           <textarea value={this.state.content} className=\"form-control\" placeholder=\"Blog Post\" onChange={(event) => this.setState({ content: event.target.value })}></textarea>\r\n                        </div>\r\n                     </div>\r\n\r\n                     <div className=\"col-md-12\">\r\n                        <div className=\"form-group\">\r\n                           <input onClick={this.postDataHandler} type=\"submit\" value=\"Submit\" className=\"btn btn-danger btn-block\" />\r\n                        </div>\r\n                     </div>\r\n\r\n                  </div>\r\n\r\n               </div>\r\n            </div>\r\n         </Container>\r\n      )\r\n   }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\n\r\n\r\nclass FullPost extends Component {\r\n   state = {\r\n      loadedPost: null,\r\n      loadedPostId: null\r\n   }\r\n\r\n\r\n   componentDidUpdate() {\r\n      if (this.props.id) {\r\n         if (!this.state.loadedPost ||\r\n            (this.state.loadedPost && this.state.loadedPost.id !== this.props.id)\r\n         ) {\r\n            Axios\r\n               .get(\"/posts/\" + this.props.id)                         \r\n               .then((response) => {\r\n                  this.setState({ loadedPost: response.data, loadedPostId: this.props.id });\r\n               })\r\n               \r\n         }\r\n      }\r\n   }\r\n\r\n   deletePostHandler = () => {\r\n      console.log('deleting selected post')\r\n   }\r\n\r\n   render() {\r\n      console.log('fullpost render')\r\n\r\n      let post = (\r\n         <div className=\"card mb-3 text-center border-0\" >\r\n            <div className=\"card-body\">\r\n               <p className=\"card-text text-muted\">Please select a post !</p>\r\n            </div>\r\n         </div>)\r\n\r\n      if (this.state.id || (this.state.loadedPostId !== this.props.id)) {\r\n         post = (\r\n            <div className=\"card mb-3 text-center border-0\" >\r\n               <div className=\"card-body\">\r\n                  <p className=\"card-text text-muted\">Loading...</p>\r\n               </div>\r\n            </div>)\r\n      }\r\n\r\n\r\n      if (this.state.loadedPost) {\r\n         post = (\r\n            <div className=\"card mb-3 text-center\" >\r\n               <div className=\"card-body p-0\">\r\n                  <h4 className=\"card-title border-bottom p-3\">{this.state.loadedPost.title}</h4>\r\n                  <p className=\"card-text text-muted border-bottom p-3\">{this.state.loadedPost.body}</p>\r\n                  <button className=\"mb-3 btn btn-warning\" type=\"button\" onClick={this.deletePostHandler} >Delete Post</button>\r\n               </div>\r\n            </div>\r\n         )\r\n      }\r\n\r\n      return post;\r\n   }\r\n}\r\n\r\n\r\nexport default FullPost","import React, { Component } from 'react'\r\nimport Posts from './Posts';\r\nimport Container from 'react-bootstrap/Container'\r\nimport FullPost from '../Component/FullPost';\r\nimport NewPost from '../Component/NewPost';\r\n// import Navbar from './../Component/Navbar';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\n\r\nclass Blog extends Component {\r\n\r\n   state = {\r\n      posts: [],\r\n      selectedPostId: null,\r\n      error: false\r\n   };\r\n\r\n\r\n\r\n   render() {\r\n\r\n      return (\r\n         <div style={{ backgroundColor: \"#f0f2f5\" }}>          \r\n            <header >\r\n               <Navbar style={{ width: '100vw', overflowX: 'hidden' }} fixed=\"top\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                  <Container >\r\n                     <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n                     <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                     <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                           <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                           <Nav.Link as={Link} to={{ pathname: '/new-post' }}>New Post</Nav.Link>\r\n                        </Nav>\r\n                     </Navbar.Collapse>\r\n                  </Container>\r\n               </Navbar>\r\n\r\n            </header>\r\n\r\n            <Route path=\"/\" exact component={Posts} ></Route>\r\n            <Route path=\"/new-post\" component={NewPost} ></Route>\r\n\r\n\r\n            {/* <Container className=\"p-3\" >\r\n               <FullPost id={this.state.selectedPostId} />\r\n            </Container> */}\r\n\r\n\r\n\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Blog","import React, { Component } from 'react'\nimport Blog from './Container/Blog';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nclass App extends Component {\n   render() {\n      return (\n         <BrowserRouter>\n            <Blog />\n         </BrowserRouter>\n      )\n   }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport  Axios from 'axios';\n\nAxios.defaults.baseURL = 'https://jsonplaceholder.typicode.com';\n// Axios.defaults.headers.common['Authorization'] = 'AUTH TOKEN';\n// Axios.defaults.headers.post['Content-Type'] = 'application/json';\n\nAxios.interceptors.request.use(\n   (request) => {\n      console.log(request)\n      return request\n   },\n   (error) => {\n      console.log(error)\n      return Promise.reject(error)\n   }\n);\n\nAxios.interceptors.response.use(\n   (response) => {\n       console.log(response);\n       // Edit request config\n       return response;\n   },\n   (error) => {\n       console.log(error);\n       return Promise.reject(error);\n   }\n);\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}